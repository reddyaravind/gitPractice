trigger:
  branches:
    include:
      - main  # Trigger on commits to the main branch

pool:
  name: Default  # Replace with the name of the agent pool where DART is configured
  demands:
    - agent.name -equals DART  # Specify that the DART agent should be used

parameters:
  - name: repoName
    type: string
    default: 'gitpractice'  # Replace with your actual repo name
  - name: branchName
    type: string
    default: 'main'  # Replace with the default branch name (if needed)
  - name: imageTag
    type: string
    default: 'latest'  # Default image tag

jobs:
- job: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    # Checkout the code from the repository
    - checkout: self  # This checks out the current repository
    
    # Docker task to build and push the image
    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'mydockerhub'  # Service connection name
        repository: 'gitpractice'  # DockerHub repository name
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(imageTag)  # Image tag defined by the parameter

# Ensure sequential execution by adding dependsOn
- job: WaitForJobToComplete
  dependsOn: BuildAndPushDockerImage
  displayName: 'Wait for Build Job to Complete'
  steps:
    - script: echo 'Job completed successfully!'
      displayName: 'Post-Build Task'



# trigger:
# - main  # You can set this to any branch you want to trigger the pipeline on

# pool:
#   name: Default  # Replace with the name of the agent pool where DART is configured
#   demands:
#     - agent.name -equals DART  # Specify that the DART agent should be used

# jobs:
# - job: HelloWorldJob
#   displayName: 'Print Hello World'
#   steps:
#   - task: AzureCLI@2
#     displayName: 'Print Hello World'


